==712== Memcheck, a memory error detector
==712== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==712== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==712== Command: ./lab1 in10a.txt in10b.txt in10c.txt out10.txt
==712== 
==712== 
==712== HEAP SUMMARY:
==712==     in use at exit: 1,515 bytes in 48 blocks
==712==   total heap usage: 172 allocs, 124 frees, 40,300 bytes allocated
==712== 
==712== 455 (96 direct, 359 indirect) bytes in 3 blocks are definitely lost in loss record 9 of 10
==712==    at 0x4C2C7A7: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==712==    by 0x401BE5: fillStdVect(std::vector<student, std::allocator<student> >&, std::istream&) (Main.cpp:32)
==712==    by 0x402123: main (Main.cpp:144)
==712== 
==712== 1,060 (240 direct, 820 indirect) bytes in 10 blocks are definitely lost in loss record 10 of 10
==712==    at 0x4C2C7A7: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==712==    by 0x401CAC: fillGrdVect(std::vector<grades, std::allocator<grades> >&, std::istream&) (Main.cpp:47)
==712==    by 0x4021D3: main (Main.cpp:156)
==712== 
==712== LEAK SUMMARY:
==712==    definitely lost: 336 bytes in 13 blocks
==712==    indirectly lost: 1,179 bytes in 35 blocks
==712==      possibly lost: 0 bytes in 0 blocks
==712==    still reachable: 0 bytes in 0 blocks
==712==         suppressed: 0 bytes in 0 blocks
==712== 
==712== For counts of detected and suppressed errors, rerun with: -v
==712== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)
